@model IEnumerable<Ultimate_Front.Models.OrderMaster>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Master</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css">
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.print.min.js"></script>


</head>
<body>

    <div class="container">
        <h2>Customers Orders</h2>
        <a href="@Url.Action("Create", "OrderMaster")" class="btn btn-primary mb-3">Create New</a>

        <h2>Order List</h2>

        <table id="dataTable" border="1" cellpadding="10">
            <thead>
                <tr>
                    <th>OrderId</th>
                    <th>CustomerName</th>
                    <th>OrderDate</th>
                    <th>AccountNumber</th>
                    <th>AccountName</th>
                    <th>TotalPrice</th>
                </tr>
            </thead>
            <tbody>
                <!-- Rows will be added here dynamically -->
            </tbody>
        </table>
 
        <script>
            $(document).ready(function () {
                $.ajax({
                    url: '/OrderMaster/GetAll', 
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        console.log(response); 

                        // Ensure response is an array
                        const dataArray = Array.isArray(response) ? response : [response];

                        const tableBody = document.getElementById('dataTable').getElementsByTagName('tbody')[0];

                        dataArray.forEach(item => {
                            const row = tableBody.insertRow();

                            row.insertCell().innerText = item.orderId ?? "N/A";
                            row.insertCell().innerText = item.customerName ?? "N/A";
                            row.insertCell().innerText = item.orderDate ?? "N/A";
                            row.insertCell().innerText = item.accountNumber ?? "N/A";
                            row.insertCell().innerText = item.accountName ?? "N/A";
                            row.insertCell().innerText = item.totalPrice ?? "N/A";

                            // Create Edit button
                            const editCell = row.insertCell();
                            const editButton = document.createElement('button');
                            editButton.innerText = "Edit";
                            editButton.className = "btn btn-primary";
                            editButton.onclick = function () {
                                editOrder(item.orderId); 
                            };
                            editCell.appendChild(editButton);

                            // Create Delete button
                            const deleteCell = row.insertCell();
                            const deleteButton = document.createElement('button');
                            deleteButton.innerText = "Delete";
                            deleteButton.className = "btn btn-danger";
                            deleteButton.onclick = function () {
                                deleteOrder(item.orderId); 
                            };
                            deleteCell.appendChild(deleteButton);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching data:", error);
                        alert("Failed to load data");
                    }
                });
            });

            // Function to edit an order
            function editOrder(orderId) {
                console.log("Edit Order ID:", orderId);
             
            }

            // Function to delete an order
            function deleteOrder(orderId) {
                if (confirm("Are you sure you want to delete this order?")) {
                    //  delete logic here
                    console.log("Delete Order ID:", orderId);
                    $.ajax({
                        url: `/OrderMaster/Delete/${orderId}`, 
                        type: 'DELETE',
                        success: function () {
                            alert("Order deleted successfully.");
                            location.reload(); 
                        },
                        error: function (xhr, status, error) {
                            console.error("Error deleting order:", error);
                            alert("Failed to delete order.");
                        }
                    });
                }
            }
        </script>


      
</body>
</html>
